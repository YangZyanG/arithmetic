package arithmetic.study.complexity;

/***
 * 空间复杂度
 * 前面我们讲过，时间复杂度的全称就是渐进时间复杂度，表示算法的执行时间与数据规模之间的增长关系。
 * 类比一下，空间复杂度的全称就是渐进空间复杂度，表示算法的储存空间与数据规模之间的增长关系。
 */
public class day03 {

    /***
     * 跟分析时间复杂度一样，我们可以看到开始先申请了一个空间储存变量i，但是它与n无关，所以忽略。
     * 然后申请了一个大小为n的int型数组，除此之外，剩下的代码再没有占用更多空间。
     * 所以整段代码的空间复杂度就是O(n)
     * 我们常见的空间复杂度就是O(1)、O(n)、O(n²)，像O(logn)、O(nlogn)这样的对数阶复杂度平时几乎用不到，
     * 而且空间复杂度比时间复杂度分析要简单得多，所以对于空间复杂度，掌握常见几种复杂度就足够了。
     * @param n
     */
    public void method(int n){

        int i = 0;
        int[] arr = new int[n];

        for(; i<n; i++){
            arr[i] = i * i;
        }
    }
}
